# Generated by Django 4.2 on 2025-05-01 18:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="BusinessUser",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("full_name", models.CharField(max_length=255)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                (
                    "date_joined",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("phone", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "profile_picture",
                    models.ImageField(blank=True, null=True, upload_to="profile_pics/"),
                ),
            ],
            options={
                "db_table": "chat_businessuser",
            },
        ),
        migrations.CreateModel(
            name="Business",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "contact_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                (
                    "contact_phone",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("address", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name_plural": "Businesses",
                "db_table": "chat_business",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ExternalAPIConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("base_url", models.URLField()),
                (
                    "auth_type",
                    models.CharField(
                        choices=[
                            ("api_key", "API Key"),
                            ("jwt", "JWT"),
                            ("basic", "Basic Auth"),
                            ("none", "None"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("api_key", models.CharField(blank=True, max_length=255, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("description", models.TextField(blank=True)),
                ("permissions", models.JSONField(default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "db_table": "chat_role",
            },
        ),
        migrations.CreateModel(
            name="UserActivityLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("action", models.CharField(max_length=255)),
                ("details", models.JSONField(default=dict)),
                ("ip_address", models.GenericIPAddressField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "chat_useractivitylog",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProductServiceItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("category", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("image_url", models.URLField(blank=True, null=True)),
                ("metadata", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "business",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_service_items",
                        to="adminchat.business",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product/Service Item",
                "verbose_name_plural": "Product/Service Items",
                "db_table": "chat_productserviceitem",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Embedding",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("vector", models.JSONField()),
                ("content", models.TextField()),
                (
                    "source_type",
                    models.CharField(
                        choices=[
                            ("document", "Documento"),
                            ("product", "Producto/Servicio"),
                            ("intent_example", "Ejemplo de Intenci√≥n"),
                            ("message", "Mensaje"),
                            ("other", "Otro"),
                        ],
                        max_length=20,
                    ),
                ),
                ("source_id", models.UUIDField()),
                ("chunk_index", models.IntegerField(blank=True, null=True)),
                ("metadata", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "business",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="embeddings",
                        to="adminchat.business",
                    ),
                ),
            ],
            options={
                "verbose_name": "Embedding",
                "verbose_name_plural": "Embeddings",
                "db_table": "chat_embedding",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Document",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("pdf", "PDF"),
                            ("docx", "Word Document"),
                            ("xlsx", "Excel Spreadsheet"),
                            ("csv", "CSV File"),
                            ("txt", "Plain Text"),
                            ("pptx", "PowerPoint"),
                            ("other", "Other"),
                        ],
                        max_length=10,
                    ),
                ),
                ("file_path", models.CharField(max_length=512)),
                ("file_hash", models.CharField(max_length=64, unique=True)),
                ("content_text", models.TextField(blank=True, null=True)),
                ("metadata", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "business",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents",
                        to="adminchat.business",
                    ),
                ),
            ],
            options={
                "verbose_name": "Document",
                "verbose_name_plural": "Documents",
                "db_table": "chat_document",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ChunkingSettings",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "entity_type",
                    models.CharField(
                        choices=[
                            ("document", "Documento"),
                            ("product_service_item", "√çtem de Producto/Servicio"),
                            ("message", "Mensaje"),
                            ("review", "Rese√±a"),
                            ("other", "Otro"),
                        ],
                        default="document",
                        max_length=50,
                    ),
                ),
                ("chunk_size", models.IntegerField(default=1000)),
                ("chunk_overlap", models.IntegerField(default=200)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "business",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="chunking_settings",
                        to="adminchat.business",
                    ),
                ),
            ],
            options={
                "verbose_name": "Chunking Settings",
                "verbose_name_plural": "Chunking Settings",
                "db_table": "chat_chunkingsettings",
            },
        ),
        migrations.CreateModel(
            name="BotTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("greeting", "Saludo"),
                            ("farewell", "Despedida"),
                            ("sales", "Venta"),
                            ("support", "Soporte"),
                            ("other", "Otro"),
                        ],
                        max_length=20,
                    ),
                ),
                ("prompt_template", models.TextField()),
                ("temperature", models.FloatField(blank=True, null=True)),
                ("top_p", models.FloatField(blank=True, null=True)),
                ("top_k", models.IntegerField(blank=True, null=True)),
                ("frequency_penalty", models.FloatField(blank=True, null=True)),
                ("presence_penalty", models.FloatField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "business",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bot_templates",
                        to="adminchat.business",
                    ),
                ),
            ],
            options={
                "verbose_name": "Bot Template",
                "verbose_name_plural": "Bot Templates",
                "db_table": "chat_bottemplate",
            },
        ),
        migrations.CreateModel(
            name="BotSettings",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("llm_model_name", models.CharField(default="gpt-4", max_length=100)),
                (
                    "embedding_model_name",
                    models.CharField(default="text-embedding-ada-002", max_length=100),
                ),
                (
                    "embedding_dim",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "sentiment_model_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "intent_model_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("search_top_k", models.IntegerField(default=5)),
                ("search_min_similarity", models.FloatField(default=0.75)),
                ("generation_temperature", models.FloatField(default=0.7)),
                ("generation_top_p", models.FloatField(default=0.9)),
                ("generation_top_k", models.IntegerField(default=50)),
                ("generation_frequency_penalty", models.FloatField(default=0.0)),
                ("generation_presence_penalty", models.FloatField(default=0.0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "business",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bot_settings",
                        to="adminchat.business",
                    ),
                ),
            ],
            options={
                "verbose_name": "Bot Settings",
                "verbose_name_plural": "Bot Settings",
                "db_table": "chat_botsettings",
            },
        ),
        migrations.CreateModel(
            name="APIRoute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("path", models.CharField(max_length=255)),
                ("external_path", models.CharField(max_length=255)),
                (
                    "method",
                    models.CharField(
                        choices=[
                            ("GET", "GET"),
                            ("POST", "POST"),
                            ("PUT", "PUT"),
                            ("PATCH", "PATCH"),
                            ("DELETE", "DELETE"),
                        ],
                        max_length=10,
                    ),
                ),
                ("requires_auth", models.BooleanField(default=True)),
                ("request_transformation", models.JSONField(blank=True, null=True)),
                ("response_transformation", models.JSONField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "config",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="routes",
                        to="adminchat.externalapiconfig",
                    ),
                ),
            ],
            options={
                "verbose_name": "API Route",
                "verbose_name_plural": "API Routes",
                "ordering": ["path", "method"],
            },
        ),
        migrations.AddField(
            model_name="businessuser",
            name="business",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="users",
                to="adminchat.business",
            ),
        ),
        migrations.AddField(
            model_name="businessuser",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="user_set",
                related_query_name="user",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AddField(
            model_name="businessuser",
            name="role",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="adminchat.role",
            ),
        ),
        migrations.AddField(
            model_name="businessuser",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
        migrations.AddIndex(
            model_name="embedding",
            index=models.Index(
                fields=["business", "source_type", "source_id"],
                name="chat_embedd_busines_3d1460_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="embedding",
            index=models.Index(
                fields=["source_type", "source_id"],
                name="chat_embedd_source__6ce12e_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="chunkingsettings",
            unique_together={("business", "entity_type")},
        ),
        migrations.AlterUniqueTogether(
            name="bottemplate",
            unique_together={("business", "name")},
        ),
        migrations.AlterUniqueTogether(
            name="apiroute",
            unique_together={("path", "method")},
        ),
    ]
